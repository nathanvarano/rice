" Stop garbage from showing in command line on enter
set t_u7=

" If not using nvim
if !has('nvim') 
  if empty($MYVIMRC) | let $MYVIMRC = expand('<sfile>:p') | endif

  " Vim dir locations
  if empty($XDG_CACHE_HOME)  | let $XDG_CACHE_HOME  = $HOME."/.cache"       | endif
  if empty($XDG_CONFIG_HOME) | let $XDG_CONFIG_HOME = $HOME."/.config"      | endif
  if empty($XDG_DATA_HOME)   | let $XDG_DATA_HOME   = $HOME."/.local/share" | endif

  set runtimepath^=$XDG_CONFIG_HOME/vim
  set runtimepath+=$XDG_DATA_HOME/vim
  set runtimepath+=$XDG_CONFIG_HOME/vim/after

  set packpath^=$XDG_DATA_HOME/vim,$XDG_CONFIG_HOME/vim
  set packpath+=$XDG_CONFIG_HOME/vim/after,$XDG_DATA_HOME/vim/after

  let g:netrw_home = $XDG_DATA_HOME."/vim"
  call mkdir($XDG_DATA_HOME."/vim/spell", 'p', 0700)
  set viewdir=$XDG_DATA_HOME/vim/view | call mkdir(&viewdir, 'p', 0700)

  " Alt + Shift + J/K to clone line or selection downwards
  execute "set <M-J>=\eJ"
  nmap <M-J> yyp
  execute "set <M-K>=\eK"
  nmap <M-K> yyp

  execute "set <M-j>=\ej"
  execute "set <M-k>=\ek"

  " Alt + j/k to move line or selection up/down
  nnoremap <M-j> :m .+1<CR>==
  nnoremap <M-k> :m .-2<CR>==
  inoremap <M-k> <Esc>:m .-2<CR>==gi
  inoremap <M-j> <Esc>:m .+1<CR>==gi
  vnoremap <M-j> :m '>+1<CR>gv=gv
  vnoremap <M-k> :m '<-2<CR>gv=gv

  " Hold shift+v to select downwards in visual mode
  vnoremap <S-v> j

  " Vim file locations
  set backupdir=$XDG_CACHE_HOME/vim/backup | call mkdir(&backupdir, 'p', 0700)
  set directory=$XDG_CACHE_HOME/vim/swap   | call mkdir(&directory, 'p', 0700)
  set undodir=$XDG_CACHE_HOME/vim/undo     | call mkdir(&undodir,   'p', 0700)
  set viminfofile=$XDG_CACHE_HOME/vim/viminfo

  " Remove delay from exiting visual mode
  set timeoutlen=1000
  set ttimeoutlen=50

  " Theme
  :colorscheme slate2
  set background=dark
  :syntax on

  " reload X with xrdb after exiting Xresouces/Xdefaults
  autocmd BufWritePost X{resources,defaults} !xrdb %

  " Show statusline
  set laststatus=1

  " Show beam cursor on enter insert mode
  let &t_SI = "\e[5 q"
  " Show block cursor on exit insert mode
  let &t_EI = "\e[1 q"

  " Airline plugin
  let g:airline_section_y = ''
  let g:airline_section_x = ''
  let g:airline_section_z = ''
  let g:airline_theme='deus'

  " Remove filename from command bar 
  set shortmess+=F
  " Remove mode from command bar
  set noshowmode

  " Make sure block cusor displays on opening file
  autocmd VimEnter * silent !echo -ne "\e[1 q"
endif
set number
set relativenumber
